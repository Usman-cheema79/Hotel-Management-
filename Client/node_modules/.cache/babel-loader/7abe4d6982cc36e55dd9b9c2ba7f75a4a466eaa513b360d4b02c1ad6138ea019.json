{"ast":null,"code":"// // src/components/RatingDropdown.js\n// import React, { useState } from 'react';\n// import { BiSolidDownArrow } from \"react-icons/bi\";\n// const ratings = [\n//     { value: '', label: 'Not applicable' },\n//     { value: '1', label: '1 star', stars: 1 },\n//     { value: '2', label: '2 stars', stars: 2 },\n//     { value: '3', label: '3 stars', stars: 3 },\n//     { value: '4', label: '4 stars', stars: 4 },\n//     { value: '5', label: '5 stars', stars: 5 },\n// ];\n\n// const RatingDropdown = ({ value, onChange, label }) => {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const handleSelect = (value) => {\n//         onChange(value);\n//         setIsOpen(false);\n//     };\n\n//     return (\n//         <div className=\"relative inline-block w-full\">\n//             <label className=\"block text-secondary text-sm font-medium mb-2\">\n//                 {label}\n//             </label>\n//             <button\n//                 type=\"button\"\n//                 className=\"w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-3 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                 onClick={() => setIsOpen(!isOpen)}\n//             >\n//                 <span className=\"block truncate\">\n//                     {ratings.find((rating) => rating.value === value)?.label || 'Select an option'}\n//                 </span>\n//                 <span className=\"absolute inset-y-0 right-0 flex items-center top-6 pr-2 pointer-events-none\">\n//                     <BiSolidDownArrow />\n//                 </span>\n//             </button>\n\n//             {isOpen && (\n//                 <ul className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n//                     {ratings.map((rating) => (\n//                         <li\n//                             key={rating.value}\n//                             className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\n//                             onClick={() => handleSelect(rating.value)}\n//                         >\n//                             <div className=\"flex items-center\">\n//                                 <span className=\"ml-3 block truncate\">{rating.label}</span>\n//                                 {rating.stars && (\n//                                     <span className=\"ml-3 flex items-center\">\n//                                         {[...Array(rating.stars)].map((_, index) => (\n//                                             <svg\n//                                                 key={index}\n//                                                 className=\"h-4 w-4 text-yellow-400\"\n//                                                 fill=\"currentColor\"\n//                                                 viewBox=\"0 0 20 20\"\n//                                             >\n//                                                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.957a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.371 2.452a1 1 0 00-.364 1.118l1.287 3.957c.3.921-.755 1.688-1.54 1.118L10 14.347l-3.37 2.452c-.786.57-1.842-.197-1.541-1.118l1.286-3.957a1 1 0 00-.364-1.118L2.64 8.384c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.957z\" />\n//                                             </svg>\n//                                         ))}\n//                                     </span>\n//                                 )}\n//                             </div>\n//                             {rating.value === value && (\n//                                 <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\">\n//                                     <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n//                                         <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 00-1.414 0L9 11.586 4.707 7.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0l7-7a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\n//                                     </svg>\n//                                 </span>\n//                             )}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default RatingDropdown;\n// src/components/RatingDropdown.js\n// import React, { useState, useContext } from 'react';\n// import { BiSolidDownArrow } from 'react-icons/bi';\n// import { HotelContext } from '../../../context/HotelContext';\n\n// const ratings = [\n//     { value: '', label: 'Not applicable' },\n//     { value: '1', label: '1 star', stars: 1 },\n//     { value: '2', label: '2 stars', stars: 2 },\n//     { value: '3', label: '3 stars', stars: 3 },\n//     { value: '4', label: '4 stars', stars: 4 },\n//     { value: '5', label: '5 stars', stars: 5 },\n// ];\n\n// const RatingDropdown = ({ label }) => {\n//     const { formData, setFormData } = useContext(HotelContext);\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const handleSelect = (value) => {\n//         setFormData({\n//             ...formData,\n//             basicDetails: {\n//                 ...formData.overview.basicDetails,\n//                 hotelRating: value\n//             }\n//         });\n//         setIsOpen(false);\n//     };\n\n//     return (\n//         <div className=\"relative inline-block w-full\">\n//             <label className=\"block text-secondary text-sm font-medium mb-2\">\n//                 {label}\n//             </label>\n//             <button\n//                 type=\"button\"\n//                 className=\"w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-3 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                 onClick={() => setIsOpen(!isOpen)}\n//             >\n//                 <span className=\"block truncate\">\n//                     {ratings.find((rating) => rating.value === formData.basicDetails.rating)?.label || 'Select an option'}\n//                 </span>\n//                 <span className=\"absolute inset-y-0 right-0 flex items-center top-6 pr-2 pointer-events-none\">\n//                     <BiSolidDownArrow />\n//                 </span>\n//             </button>\n\n//             {isOpen && (\n//                 <ul className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n//                     {ratings.map((rating) => (\n//                         <li\n//                             key={rating.value}\n//                             className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\n//                             onClick={() => handleSelect(rating.value)}\n//                         >\n//                             <div className=\"flex items-center\">\n//                                 <span className=\"ml-3 block truncate\">{rating.label}</span>\n//                                 {rating.stars && (\n//                                     <span className=\"ml-3 flex items-center\">\n//                                         {[...Array(rating.stars)].map((_, index) => (\n//                                             <svg\n//                                                 key={index}\n//                                                 className=\"h-4 w-4 text-yellow-400\"\n//                                                 fill=\"currentColor\"\n//                                                 viewBox=\"0 0 20 20\"\n//                                             >\n//                                                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.957a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.371 2.452a1 1 0 00-.364 1.118l1.287 3.957c.3.921-.755 1.688-1.54 1.118L10 14.347l-3.37 2.452c-.786.57-1.842-.197-1.541-1.118l1.286-3.957a1 1 0 00-.364-1.118L2.64 8.384c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.957z\" />\n//                                             </svg>\n//                                         ))}\n//                                     </span>\n//                                 )}\n//                             </div>\n//                             {rating.value === formData.basicDetails.rating && (\n//                                 <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\">\n//                                     <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n//                                         <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 00-1.414 0L9 11.586 4.707 7.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0l7-7a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\n//                                     </svg>\n//                                 </span>\n//                             )}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default RatingDropdown;","map":{"version":3,"names":[],"sources":["D:/Office work/Hotel managment/React/hotel-management-react/src/components/hostel_listing_form/overview-form/rating-dropdown.jsx"],"sourcesContent":["// // src/components/RatingDropdown.js\r\n// import React, { useState } from 'react';\r\n// import { BiSolidDownArrow } from \"react-icons/bi\";\r\n// const ratings = [\r\n//     { value: '', label: 'Not applicable' },\r\n//     { value: '1', label: '1 star', stars: 1 },\r\n//     { value: '2', label: '2 stars', stars: 2 },\r\n//     { value: '3', label: '3 stars', stars: 3 },\r\n//     { value: '4', label: '4 stars', stars: 4 },\r\n//     { value: '5', label: '5 stars', stars: 5 },\r\n// ];\r\n\r\n// const RatingDropdown = ({ value, onChange, label }) => {\r\n//     const [isOpen, setIsOpen] = useState(false);\r\n\r\n//     const handleSelect = (value) => {\r\n//         onChange(value);\r\n//         setIsOpen(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"relative inline-block w-full\">\r\n//             <label className=\"block text-secondary text-sm font-medium mb-2\">\r\n//                 {label}\r\n//             </label>\r\n//             <button\r\n//                 type=\"button\"\r\n//                 className=\"w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-3 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                 onClick={() => setIsOpen(!isOpen)}\r\n//             >\r\n//                 <span className=\"block truncate\">\r\n//                     {ratings.find((rating) => rating.value === value)?.label || 'Select an option'}\r\n//                 </span>\r\n//                 <span className=\"absolute inset-y-0 right-0 flex items-center top-6 pr-2 pointer-events-none\">\r\n//                     <BiSolidDownArrow />\r\n//                 </span>\r\n//             </button>\r\n\r\n//             {isOpen && (\r\n//                 <ul className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\r\n//                     {ratings.map((rating) => (\r\n//                         <li\r\n//                             key={rating.value}\r\n//                             className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\r\n//                             onClick={() => handleSelect(rating.value)}\r\n//                         >\r\n//                             <div className=\"flex items-center\">\r\n//                                 <span className=\"ml-3 block truncate\">{rating.label}</span>\r\n//                                 {rating.stars && (\r\n//                                     <span className=\"ml-3 flex items-center\">\r\n//                                         {[...Array(rating.stars)].map((_, index) => (\r\n//                                             <svg\r\n//                                                 key={index}\r\n//                                                 className=\"h-4 w-4 text-yellow-400\"\r\n//                                                 fill=\"currentColor\"\r\n//                                                 viewBox=\"0 0 20 20\"\r\n//                                             >\r\n//                                                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.957a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.371 2.452a1 1 0 00-.364 1.118l1.287 3.957c.3.921-.755 1.688-1.54 1.118L10 14.347l-3.37 2.452c-.786.57-1.842-.197-1.541-1.118l1.286-3.957a1 1 0 00-.364-1.118L2.64 8.384c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.957z\" />\r\n//                                             </svg>\r\n//                                         ))}\r\n//                                     </span>\r\n//                                 )}\r\n//                             </div>\r\n//                             {rating.value === value && (\r\n//                                 <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\">\r\n//                                     <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n//                                         <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 00-1.414 0L9 11.586 4.707 7.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0l7-7a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\r\n//                                     </svg>\r\n//                                 </span>\r\n//                             )}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default RatingDropdown;\r\n// src/components/RatingDropdown.js\r\n// import React, { useState, useContext } from 'react';\r\n// import { BiSolidDownArrow } from 'react-icons/bi';\r\n// import { HotelContext } from '../../../context/HotelContext';\r\n\r\n// const ratings = [\r\n//     { value: '', label: 'Not applicable' },\r\n//     { value: '1', label: '1 star', stars: 1 },\r\n//     { value: '2', label: '2 stars', stars: 2 },\r\n//     { value: '3', label: '3 stars', stars: 3 },\r\n//     { value: '4', label: '4 stars', stars: 4 },\r\n//     { value: '5', label: '5 stars', stars: 5 },\r\n// ];\r\n\r\n// const RatingDropdown = ({ label }) => {\r\n//     const { formData, setFormData } = useContext(HotelContext);\r\n//     const [isOpen, setIsOpen] = useState(false);\r\n\r\n//     const handleSelect = (value) => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             basicDetails: {\r\n//                 ...formData.overview.basicDetails,\r\n//                 hotelRating: value\r\n//             }\r\n//         });\r\n//         setIsOpen(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"relative inline-block w-full\">\r\n//             <label className=\"block text-secondary text-sm font-medium mb-2\">\r\n//                 {label}\r\n//             </label>\r\n//             <button\r\n//                 type=\"button\"\r\n//                 className=\"w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-3 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n//                 onClick={() => setIsOpen(!isOpen)}\r\n//             >\r\n//                 <span className=\"block truncate\">\r\n//                     {ratings.find((rating) => rating.value === formData.basicDetails.rating)?.label || 'Select an option'}\r\n//                 </span>\r\n//                 <span className=\"absolute inset-y-0 right-0 flex items-center top-6 pr-2 pointer-events-none\">\r\n//                     <BiSolidDownArrow />\r\n//                 </span>\r\n//             </button>\r\n\r\n//             {isOpen && (\r\n//                 <ul className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\r\n//                     {ratings.map((rating) => (\r\n//                         <li\r\n//                             key={rating.value}\r\n//                             className=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\r\n//                             onClick={() => handleSelect(rating.value)}\r\n//                         >\r\n//                             <div className=\"flex items-center\">\r\n//                                 <span className=\"ml-3 block truncate\">{rating.label}</span>\r\n//                                 {rating.stars && (\r\n//                                     <span className=\"ml-3 flex items-center\">\r\n//                                         {[...Array(rating.stars)].map((_, index) => (\r\n//                                             <svg\r\n//                                                 key={index}\r\n//                                                 className=\"h-4 w-4 text-yellow-400\"\r\n//                                                 fill=\"currentColor\"\r\n//                                                 viewBox=\"0 0 20 20\"\r\n//                                             >\r\n//                                                 <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.957a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.371 2.452a1 1 0 00-.364 1.118l1.287 3.957c.3.921-.755 1.688-1.54 1.118L10 14.347l-3.37 2.452c-.786.57-1.842-.197-1.541-1.118l1.286-3.957a1 1 0 00-.364-1.118L2.64 8.384c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.957z\" />\r\n//                                             </svg>\r\n//                                         ))}\r\n//                                     </span>\r\n//                                 )}\r\n//                             </div>\r\n//                             {rating.value === formData.basicDetails.rating && (\r\n//                                 <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\">\r\n//                                     <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n//                                         <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 00-1.414 0L9 11.586 4.707 7.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0l7-7a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\r\n//                                     </svg>\r\n//                                 </span>\r\n//                             )}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default RatingDropdown;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}